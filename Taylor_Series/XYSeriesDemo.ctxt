#BlueJ class context
comment0.target=XYSeriesDemo
comment0.text=\r\n\ Using\ the\ JFreeChart\ API\ to\ graph\ functions\ on\ the\ XY\ plane.\r\n\ Graphs\ two\ series\ a\ function\ and\ its\ approximation\ using\ its\ Macluarian\ Series\r\n\ (Taylor\ Series\ centered\ at\ 0)\r\n
comment1.params=title
comment1.target=XYSeriesDemo(java.lang.String)
comment1.text=\r\n\ Creates\ series\ and\ seriesT\ which\ map\ the\ function\ on\ the\ XY-plane.\r\n\ \r\n\ @sims\ Allows\ you\ to\ choose\ a\ function\r\n\ @Start\ Choose\ starting\ value\ to\ graph\r\n\ @end\ Choose\ ending\ value\ to\ graph\r\n\ @deriv\ Choose\ amount\ of\ derivatives\ to\ use\ in\ the\ approximation\ of\ functions\r\n\ @Run\ Runs\ the\ simulation\r\n
comment10.params=SIM
comment10.target=void\ Start(int)
comment11.params=x
comment11.target=int\ Factorial(int)
comment11.text=\r\n\ Iteratively\ caculates\ x\ factorial\ (x\!)\r\n
comment12.params=start\ end\ increment\ demo
comment12.target=java.util.ArrayList\ Calc(double,\ double,\ double,\ XYSeriesDemo)
comment12.text=\r\n\ Calculates\ the\ approximation\ function\r\n
comment2.params=e
comment2.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment2.text=\r\n\ Clears\ the\ former\ function\ from\ the\ graph\ and\r\n\ pulls\ the\ current\ start,\ end,\ and\ derivative\r\n\ Then\ runs\ the\ simulation.\r\n
comment3.params=x\ y
comment3.target=void\ adds(double,\ double)
comment3.text=\r\n\ Adds\ to\ approximated\ functions\r\n
comment4.params=x\ y
comment4.target=void\ addT(double,\ double)
comment4.text=\r\n\ Adds\ to\ actual\ function\r\n
comment5.params=
comment5.target=Function\ getFunction()
comment5.text=\r\n\ retuns\ function\ for\ approximation\r\n
comment6.params=
comment6.target=void\ setSine()
comment6.text=\r\n\ Sets\ simulation\ to\ approximate\ sine\ by\ clearing\ all\ data\ currently\ added\ then\ adding\r\n\ polynomials\ to\ a\ list\ based\ on\ the\ basic\ sine\ power\ series.\ Then\ uses\ the\ Calc\ function\r\n\ to\ setup\ and\ approximate\ a\ function\ between\ the\ interval\ start\ and\ end.\ After\ a\ seperate\r\n\ Function\ Func\ uses\ java's\ prebuilt\ math\ library\ to\ plot\ the\ function.\r\n
comment7.params=
comment7.target=void\ setex()
comment7.text=\r\n\ Sets\ simulation\ to\ approximate\ sine\ by\ clearing\ all\ data\ currently\ added\ then\ adding\r\n\ polynomials\ to\ a\ list\ based\ on\ the\ basic\ e^x\ power\ series.\ Then\ uses\ the\ Calc\ function\r\n\ to\ setup\ and\ approximate\ a\ function\ between\ the\ interval\ start\ and\ end.\ After\ a\ seperate\r\n\ Function\ Func\ uses\ java's\ prebuilt\ math\ library\ to\ plot\ the\ function.\r\n
comment8.params=
comment8.target=void\ setCosine()
comment8.text=\r\n\ Sets\ simulation\ to\ approximate\ sine\ by\ clearing\ all\ data\ currently\ added\ then\ adding\r\n\ polynomials\ to\ a\ list\ based\ on\ the\ basic\ cosine\ power\ series.\ Then\ uses\ the\ Calc\ function\r\n\ to\ setup\ and\ approximate\ a\ function\ between\ the\ interval\ start\ and\ end.\ After\ a\ seperate\r\n\ Function\ Func\ uses\ java's\ prebuilt\ math\ library\ to\ plot\ the\ function.\r\n
comment9.params=args
comment9.target=void\ main(java.lang.String[])
comment9.text=\r\n\ Starting\ point\ for\ the\ demonstration\ application.\r\n
numComments=13
