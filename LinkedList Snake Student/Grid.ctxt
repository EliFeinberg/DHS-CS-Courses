#BlueJ class context
comment0.target=Grid
comment0.text=\r\n\ The\ base\ of\ the\ game\:\ the\ playing\ grid,\ powerUps,\ powerDowns,\ snake,\ and\ base\ of\ movement\ and\ rules\r\n\r\n
comment1.params=width\ height
comment1.target=Grid(int,\ int)
comment1.text=\r\n\ Creates\ a\ new\ grid\r\n\ @param\ width\ the\ width\ of\ the\ grid\r\n\ @param\ height\ the\ height\ of\ the\ grid\r\n
comment10.params=
comment10.target=Node\ getPowerDown()
comment10.text=\r\n\ Returns\ the\ powerDown\ Node\r\n\ @return\ the\ powerDown\ Node\r\n
comment11.params=
comment11.target=java.awt.Image\ getPowerDownImage()
comment11.text=\r\n\ Returns\ the\ powerDown\ Image\r\n\ @return\ the\ powerDown\ Image\r\n
comment12.params=
comment12.target=Node\ getPowerUp()
comment12.text=\r\n\ Returns\ the\ powerUp\ node\r\n\ @return\ the\ powerUp\ node\r\n
comment13.params=
comment13.target=java.awt.Image\ getPowerUpImage()
comment13.text=\r\n\ Returns\ the\ powerUp\r\n\ @return\ the\ powerUpImage\r\n
comment14.params=
comment14.target=int\ getWidth()
comment14.text=\r\n\ Returns\ the\ width\ of\ the\ board\r\n\ @return\ the\ width\ of\ the\ board\r\n
comment15.params=
comment15.target=int\ getHeight()
comment15.text=\r\n\ Returns\ the\ height\ of\ the\ board\r\n\ @return\ the\ height\ of\ the\ board\r\n
comment16.params=
comment16.target=int\ getScore()
comment16.text=\r\n\ Returns\ the\ score\ (the\ size\ of\ the\ snake,\ used\ for\ calculating\ speed)\r\n\ @return\ the\ score\r\n
comment2.params=
comment2.target=Snake\ initSnake()
comment2.text=\r\n\ Creates\ a\ new\ snake\ with\ 15\ nodes\r\n\ @return\ the\ initial\ snake\r\n
comment3.params=
comment3.target=Node\ createPowerDown()
comment3.text=\r\n\ Creates\ a\ powerDown\ and\ places\ it\ randomly\ on\ the\ grid\r\n\ @return\ the\ node\ that\ is\ that\ good\ food\r\n
comment4.params=
comment4.target=Node\ createPowerUp()
comment4.text=\r\n\ Creates\ a\ power\ up\ and\ places\ it\ randomly\ on\ the\ grid\r\n\ @return\ the\ node\ that\ is\ that\ bad\ food\r\n
comment5.params=
comment5.target=boolean\ nextRound()
comment5.text=\r\n\ After\ every\ move,\ checks\ to\ see\ if\ the\ snake\ can\ keep\ playing\r\n\ @return\ whether\ or\ not\ the\ snake\ can\ keep\ playing\r\n
comment6.params=
comment6.target=boolean\ isAtOne()
comment6.text=\r\n\ Checks\ to\ see\ if\ the\ snake\ is\ down\ to\ one\ node\r\n\ @return\ whether\ or\ not\ the\ snake\ is\ down\ to\ one\ node\r\n
comment7.params=direction
comment7.target=boolean\ isMoveValid(Direction)
comment7.text=\r\n\ Checks\ to\ see\ if\ the\ snake's\ move\ is\ valid\ (if\ the\ snake\ lost,\ it\ is\ invalid)\r\n\ Begins\ the\ move\ of\ the\ snake\r\n\ @param\ Direction\ the\ direction\ the\ snake\ will\ move\r\n\ @return\ whether\ or\ not\ the\ snake's\ move\ is\ valid\r\n
comment8.params=newDirection
comment8.target=void\ changeDirection(Direction)
comment8.text=\r\n\ Changes\ the\ direction\ of\ the\ snake\ if\ it\ is\ an\ allowed\ switch\r\n\ @param\ Direction\ the\ new\ direction\ to\ switch\r\n
comment9.params=
comment9.target=Snake\ getSnake()
comment9.text=\r\n\ Returns\ the\ snake\r\n\ @return\ the\ snake\r\n
numComments=17
